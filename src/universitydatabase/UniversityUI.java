package universitydatabase;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
/*
 * UniversityUI.java
 *
 * Created on Apr 16, 2010, 2:05:37 PM
 */
/**
 *
 * @author AARON
 */
public class UniversityUI extends javax.swing.JFrame {
    Statement stat;
    Connection conn;
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UniversityUI().setVisible(true);
            }
        });
    }
    /** Creates new form UniversityUI */
    public UniversityUI() {
        initComponents();
        getRootPane().setDefaultButton(jButton1);
        runDB();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel1.setText("George Mason University GPA Calculator");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Name:");

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel3.setText("GPA:");

        jButton1.setText("Calculate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Quit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2)
                            .addComponent(jButton1))))
                .addContainerGap(146, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(94, 94, 94))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String input= "";
        // TODO add your handling code here:
        if(evt.getSource()==jButton1){
            input = jTextField1.getText();
            input = input.toUpperCase();
            try {
                calculateGPA(input);
            } catch (SQLException ex) {
                Logger.getLogger(UniversityUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:

    }//GEN-LAST:event_formWindowClosed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(evt.getSource() ==jButton2){
            try {
                stat.close();
                conn.close();
                System.out.println("Exited without error");
                System.exit(0);
            } catch (SQLException ex) {
                Logger.getLogger(UniversityUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
    * @param args the command line arguments
    */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    public void runDB(){
        try{
        DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
        String user = new String ("team4");
        String password = new String ("l24class");
        conn = DriverManager.getConnection("jdbc:oracle:thin:@apollo.ite.gmu.edu:1521:ite10g",user,password);

        stat = conn.createStatement();
        }catch(Exception e)
        {
            System.out.println(e.getMessage());
        }
    }
    public void calculateGPA(String input) throws SQLException{
       boolean foundResult = false;
       boolean found = false;


       /*
        * This is the first part that only takes the GPA from the Student Table
        */


       /*String temp = "select s.GPA from Student s where Name='"+input+"'";
       ResultSet  rs = stat.executeQuery(temp);
       found = rs.next();
        if(found)
        {
            Float GPA = rs.getFloat("GPA");
            if(GPA>=2.0){
                jTextArea1.setText("This student is in good standing :)");
            }
            else if(GPA==4){
                jTextArea1.setText("This student is amazing, congradulations " + input + " =)");
            }
            else if(GPA<2.0){
                jTextArea1.setText("This student is on probation :(");
            }

        }
        else{
           jTextArea1.setText("This student does not exist");
        }
        */

       
       /*
        * This is the second part that calculates the GPA from University_grade
        */

        String temp2 = "select student_id from Student where Name='"+input+"'";
        ResultSet rs2 = stat.executeQuery(temp2);
        found = rs2.next();
        if(found){
            int overallGPA=0;
            int number =0;
            String id = rs2.getString("student_id");
            String temp3 = "select grade from university_grade where student_id='"+id+"'";

            ResultSet rs3 = stat.executeQuery(temp3);
            
            while(rs3.next()){
                foundResult=true;
                String grade = rs3.getString("Grade");
                if(grade.equals("A")){
                    overallGPA+=4;
                    number++;
                }
                if(grade.equals("B")){
                    overallGPA+=3;
                    number++;
                }
                if(grade.equals("C")){
                    overallGPA+=2;
                    number++;
                }
                if(grade.equals("D")){
                    overallGPA+=1;
                    number++;
                }
                if(grade.equals("F")){
                    overallGPA+=0;
                    number++;
                }
                
            }
            if(foundResult==true){
                float realGPA=(float)overallGPA/number;
                String finalGPA = Float.toString(realGPA);
                jTextArea1.setText(finalGPA);
            }
            if(foundResult==false){
                jTextArea1.setText("This student has no transcript");
            }
           
        }
        else{
                jTextArea1.setText("This student does not exist");
            }

    }
}
